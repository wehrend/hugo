<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bits &amp; pieces - Sven Wehrend</title>
    <link>http://localhost:1313/en/docs/digital_logic_2/</link>
    <description>Recent content on Bits &amp; pieces - Sven Wehrend</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 01 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/en/docs/digital_logic_2/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>10_sequential_logic</title>
      <link>http://localhost:1313/en/docs/digital_logic_2/10_sequential_logic/</link>
      <pubDate>Mon, 01 May 2023 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/en/docs/digital_logic_2/10_sequential_logic/</guid>
      <description>Sequential Logic Complementary to Combinatorial logic, sequential logic contains some type of memory, making the behaviour state-dependent. We need to feed it a clock signal.
Mealy and Moore Automata (synchronous) There are two different types of finite automata in the digital logic. Those are:
The mealy automata, which is dependent on the input and the state
The moore automata, which is only dependent on the state
Synchronous and Asynchronous sequential Logic There are two different types of sequential logic, the synchronous sequential logic with one central clock, as well as the asnychonous logic which has multiple clock domains.</description>
    </item>
    
    <item>
      <title>11_Clocks_flipflops_and_registers</title>
      <link>http://localhost:1313/en/docs/digital_logic_2/11_clocks_and_registers/</link>
      <pubDate>Sat, 12 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/en/docs/digital_logic_2/11_clocks_and_registers/</guid>
      <description>Clocks, Flipflops and registers In this blog post the author will introduce multiple elements needed at a later stage.
Register-Transfer-Level needs a clock source As for now we only learned about combinatiorial logic, which works without any clock source - every signal is just delayed by the time it needs to travel through the circuit. This is known as asynchronous. But for more sophisticated tasks, sequential circuits, having registers storing the input and output signals are necessary to get correct results.</description>
    </item>
    
    <item>
      <title>Digital Logic 2</title>
      <link>http://localhost:1313/en/docs/digital_logic_2/images/how_does_cpu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/en/docs/digital_logic_2/images/how_does_cpu/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
