<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>draft on Interdependent - Sven Wehrend</title>
    <link>http://localhost:1313/tags/draft/</link>
    <description>Recent content in draft on Interdependent - Sven Wehrend</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 24 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/tags/draft/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>X0_multiplication</title>
      <link>http://localhost:1313/docs/digital_logic_x/x0_multiplication/</link>
      <pubDate>Sun, 24 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/docs/digital_logic_x/x0_multiplication/</guid>
      <description>Multiplication and Divsion Multiplication operations can be implemented in very different ways: Slow, as a serial operation, controlled by a micro program or fast in dedicated hardware.
The division is a more complex operation, and will be discussed in another post.
Shift left and shift left For integer numbers that are unsigned.
For multipliers that are powers of two, the operation is very simple and can be implemented via a shift left.</description>
    </item>
    
    <item>
      <title>07_RISC-V</title>
      <link>http://localhost:1313/docs/digital_logic/07_risc_v/</link>
      <pubDate>Mon, 21 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/docs/digital_logic/07_risc_v/</guid>
      <description>Digital design meets computer architecture RISC vs CISC and The RISC-V architecture Existing processor types can be classified by their instruction type set: Reduced instruction set computer (RISC), Complex instruction set computer (CISC) and hybrid forms. While mini processors like ARM for embedded systems mostly utilise reduced instruction sets,todays workstation and Server Architectures (x86, x86_64) are hybrids of RISC and CISC. The idea of a reduced instruction set is to avoid big complex instructions and multiple different addressing modes (as those typically used in x86 architectures).</description>
    </item>
    
    <item>
      <title>How does a CPU work? Overview</title>
      <link>http://localhost:1313/pages/overview/</link>
      <pubDate>Sun, 20 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/pages/overview/</guid>
      <description>Introduction and overview Introduction and overview
Every topic of this course is broken up into two parts: A part about the mathematical side of digital logic, ideally almost independent from implementation details and a more concrete part handling this very details. In the concrete part we will mostly discuss the implementation on an electrical layer, though there are still other solutions possible based on fluid dynamics, or optical gates, most computers and logic gates are still based on electronics and semiconductor technology and this will not change with quantum computing, which is mostly tied to / adjunct to probability theory.</description>
    </item>
    
  </channel>
</rss>
