<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bits &amp; pieces - Sven Wehrend</title>
    <link>http://localhost:1313/content.de/docs/digital_logic_de/</link>
    <description>Recent content on Bits &amp; pieces - Sven Wehrend</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Thu, 24 Oct 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/content.de/docs/digital_logic_de/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>00_combinatorial_logic_de</title>
      <link>http://localhost:1313/content.de/docs/digital_logic_de/00_combinatorial_logic/</link>
      <pubDate>Thu, 24 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/content.de/docs/digital_logic_de/00_combinatorial_logic/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Dieser Kurs über digitale Logik ist in zwei große Abschnitte aufgeteilt:&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;olist arabic&#34;&gt;&#xA;&lt;ol class=&#34;arabic&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Kombinatorische Schaltungen (ohne Speicherelemente)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Sequentielle Schaltungen (mit Speicherelementen)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;../images/how_does_cpu/digital_logic.svg&#34; alt=&#34;digital logic&#34; width=&#34;500px&#34;/&gt;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Während kombinatorische Schaltungen aus booleschen Gattern bestehen,&#xA;die ohne Rückkopplungsfunktion miteinander verbunden sind, besitzen sequentielle Gatter&#xA;eine Speicherfunktion, die es ihnen ermöglicht, in einen anderen Zustand überzugehen.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Eine kombinatorische Schaltung kann einen &lt;em&gt;n&lt;/em&gt; - weiten Vektor von Eingängen und einen &lt;em&gt;m&lt;/em&gt; - weiten Vektor&#xA;von Ausgängen haben.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Kombinatorische Schaltungen können auf verschiedene Weise beschrieben werden:&#xA;Als Formel, als Schaltkreis, als Wahrheitstabelle oder als Karnaugh-Map.&#xA;Alle diese Beschreibungen sind ineinander überführbar.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>02_XOR</title>
      <link>http://localhost:1313/content.de/docs/digital_logic_de/02_xor/</link>
      <pubDate>Thu, 24 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/content.de/docs/digital_logic_de/02_xor/</guid>
      <description>&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_xor&#34;&gt;XOR&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Da es viele wichtige Anwendungen für die Exklusiv-Oder (XOR) Operation gibt&#xA;ist ihr ein eigener Blog-Beitrag gewidmet. Zwei der wichtigsten sind:&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;ulist&#34;&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;XOR-Operationen werden häufig in linearen rückgekoppelten Schieberegistern (LFSR) verwendet.&#xA;LFSR sind ein entscheidender Schritt in Scramblern bzw. Descramblern,&#xA;die in Sendern/Empfängern verwendet werden&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Teil eines Verschlüsselungsalgorithmus&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Und nicht zuletzt ein wichtiger Teil eines Halbaddierers.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Die Exklusiv-Oder-Operation xor, die auch als Antivalenz bezeichnet wird&#xA;wird als A ⊕ B = Q bezeichnet. Ihre Wahrheitstabelle ist unten dargestellt&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>07_RISC-V</title>
      <link>http://localhost:1313/content.de/docs/digital_logic_de/07_risc_v/</link>
      <pubDate>Mon, 21 Mar 2022 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/content.de/docs/digital_logic_de/07_risc_v/</guid>
      <description>&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_digital_design_meets_computer_architecture&#34;&gt;Digital design meets computer architecture&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;h1 id=&#34;_risc_vs_cisc_and_the_risc_v_architecture&#34; class=&#34;sect0&#34;&gt;RISC vs CISC and The RISC-V architecture&lt;/h1&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Existing processor types can be classified by their instruction type set:&#xA;Reduced instruction set computer (RISC), Complex instruction set computer (CISC) and hybrid forms.&#xA;While mini processors like ARM for embedded systems mostly utilise reduced instruction&#xA;sets,todays workstation and Server Architectures (x86, x86_64) are hybrids of RISC and CISC.&#xA;The idea of a reduced instruction set is to avoid big complex instructions and multiple different&#xA;addressing modes (as those typically used in x86 architectures).&#xA;Advantages of a RISC architecture are shorter pipelines which allows faster clocking.&#xA;RISC architectures follow a simple scheme: &amp;#39;Fetch → Decode → Fetch Operands → Execute → Write Back&amp;#39;&#xA;Also instructions have a constant length, memory operations are divided from arithmetic operations,&#xA;which is known as Load/Store-architecture. RISC-V is an open standard for the instruction set archtitecture (ISA).&#xA;Most of this post is referenced from the popular book Computer Organization and Design (RISC-V) Edition by Hennessey and Patterson.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>06_Memory</title>
      <link>http://localhost:1313/content.de/docs/digital_logic_de/06_memory/</link>
      <pubDate>Sun, 20 Mar 2022 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/content.de/docs/digital_logic_de/06_memory/</guid>
      <description>&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_memory_organization&#34;&gt;Memory Organization&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;In this blog post the author will introduce the different&#xA;types of semiconductor memory. This is a wide field,&#xA;so the goal here is to focus on the most important ones&#xA;and draw the differences between the different types.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;sect2&#34;&gt;&#xA;&lt;h3 id=&#34;_the_memory_hierarchy&#34;&gt;The Memory hierarchy&lt;/h3&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;As in computing all is about performance, we first have a look&#xA;at the memory hierarchy. As you can see in the pyramid below, memory is&#xA;ordered in layers. The slowest elements -also the ones with highest&#xA;latency - are at the bottom of this pyramid, while the fastest ones are&#xA;shown at the apex.&#xA;Imagine your desk is the actual CPU, with an open book laying in front of your&#xA;eyes. This is the register. Now you read in this book a reference to another book&#xA;in your bookshelf. Your bookshelf is the cache here. The cache itself is again layered.&#xA;Lets say L1-cache is the bookshelf in your room, L2-cache the bookshelf in another room&#xA;and L3-cache books stored in a box in the same room. If you now have a reference&#xA;in your current book (the one on your desk), that refers to a book you do not possess, you need to&#xA;go to the public library. The public library is your RAM. The access times are really high.&#xA;And lets say the book you need is also not available there, and they must order it from a library&#xA;in another city. Then you got to the level at the bottom, which is the disk storage unit.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>05_ALU</title>
      <link>http://localhost:1313/content.de/docs/digital_logic_de/05_alu/</link>
      <pubDate>Fri, 11 Mar 2022 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/content.de/docs/digital_logic_de/05_alu/</guid>
      <description>&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_the_alu_the_swiss_knife_of_every_cpu&#34;&gt;The ALU, the swiss knife of every cpu&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Today the author wants to introduce an important part of every cpu:&#xA;The arithmetic logic unit (ALU), we already know about some functions&#xA;presented in the blog posts before. In this post we want to close the&#xA;gaps systematically.&#xA;Time for a short recap: The logic functions &amp;#39;and&amp;#39;,&amp;#39;or&amp;#39;,&amp;#39;not&amp;#39; and &amp;#39;xor&amp;#39;&#xA;were introduced, also the arithmetic functions &amp;#39;add&amp;#39; and &amp;#39;sub&amp;#39; for integers&#xA;were shown. Now we want to build most of those functionalities in one unit,&#xA;the 1-bit alu cell.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>04_Signs</title>
      <link>http://localhost:1313/content.de/docs/digital_logic_de/04_signs/</link>
      <pubDate>Sun, 06 Feb 2022 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/content.de/docs/digital_logic_de/04_signs/</guid>
      <description>&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_extending_the_binary_system&#34;&gt;Extending the binary system&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;While in the previous blog post about addition,&#xA;the binary numbers had only one interpretation,&#xA;we extend the system here to include negative (integer)&#xA;numbers.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;../images/how_does_cpu/binary_system.svg&#34; alt=&#34;binary system&#34; width=&#34;50%&#34;/&gt;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;The simplest approach we can think of is to use the most significant bit (MSB)&#xA;as sign bit, where &amp;#39;0&amp;#39; ist intepreted as sign &amp;#39;+&amp;#39; and &amp;#39;1&amp;#39; is interpreted as &amp;#39;-&amp;#39;.&#xA;However as we see in the following calculation this does not work as expected:&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>03_binary_system</title>
      <link>http://localhost:1313/content.de/docs/digital_logic_de/03_binary_system/</link>
      <pubDate>Thu, 02 Dec 2021 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/content.de/docs/digital_logic_de/03_binary_system/</guid>
      <description>&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_the_binary_system&#34;&gt;The Binary System&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;All computer we act with on a daily base do not know about the decimal system we are using, based on the ten digits at our hands.&#xA;All they know about are the states &lt;code&gt;on&lt;/code&gt; and &lt;code&gt;off&lt;/code&gt;. We build an imaginary circuit with a power source a control light - here an LED (Light Emitting Diode)  - and a switch,&#xA;closing the connection let the light flash. An off light counts as zero, and on light counts as one. Simple as it.We switch the light on&#xA;and get a one.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>01_boolean_algebra</title>
      <link>http://localhost:1313/content.de/docs/digital_logic_de/01_boolean_algebra/</link>
      <pubDate>Wed, 23 Dec 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/content.de/docs/digital_logic_de/01_boolean_algebra/</guid>
      <description>&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_boolesche_algebra_und_einfache_logische_gatter&#34;&gt;Boolesche Algebra und einfache logische Gatter&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Wir beginnen (die Reise) mit drei sehr&#xA;grundlegenden logischen Funktionen (oder Operationen), die trotz ihrer Einfachheit&#xA;bereits gültige Anweisungen einer regulären CPU sind:&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;strong&gt;NOT, AND und OR&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Logische Funktionen - auch Operationen genannt, der Autor wird hier beide Begriffe abwechselnd verwenden -&#xA;können auf verschiedene Weise beschrieben werden, am häufigsten wird sie implizit beschrieben&#xA;als boolesche Gleichung, aber sie können auch explizit in einer Wahrheitstabelle erklärt werden.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/content.de/docs/digital_logic_de/agenda2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/content.de/docs/digital_logic_de/agenda2/</guid>
      <description>&lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;&#xA;&lt;!DOCTYPE html PUBLIC &#34;-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN&#34; &#34;http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd&#34;&gt;&lt;html xmlns=&#34;http://www.w3.org/1999/xhtml&#34;&gt;&lt;!--This file was converted to xhtml by LibreOffice - see https://cgit.freedesktop.org/libreoffice/core/tree/filter/source/xslt for the code.--&gt;&lt;head profile=&#34;http://dublincore.org/documents/dcmi-terms/&#34;&gt;&lt;meta http-equiv=&#34;Content-Type&#34; content=&#34;application/xhtml+xml; charset=utf-8&#34;/&gt;&lt;title xml:lang=&#34;en-US&#34;&gt;- no title specified&lt;/title&gt;&lt;meta name=&#34;DCTERMS.title&#34; content=&#34;&#34; xml:lang=&#34;en-US&#34;/&gt;&lt;meta name=&#34;DCTERMS.language&#34; content=&#34;en-US&#34; scheme=&#34;DCTERMS.RFC4646&#34;/&gt;&lt;meta name=&#34;DCTERMS.source&#34; content=&#34;http://xml.openoffice.org/odf2xhtml&#34;/&gt;&lt;meta name=&#34;DCTERMS.issued&#34; content=&#34;2022-04-15T18:22:57.383394805&#34; scheme=&#34;DCTERMS.W3CDTF&#34;/&gt;&lt;meta name=&#34;DCTERMS.modified&#34; content=&#34;2023-03-18T15:25:00.926735488&#34; scheme=&#34;DCTERMS.W3CDTF&#34;/&gt;&lt;meta name=&#34;DCTERMS.provenance&#34; content=&#34;&#34; xml:lang=&#34;en-US&#34;/&gt;&lt;meta name=&#34;DCTERMS.subject&#34; content=&#34;,&#34; xml:lang=&#34;en-US&#34;/&gt;&lt;link rel=&#34;schema.DC&#34; href=&#34;http://purl.org/dc/elements/1.1/&#34; hreflang=&#34;en&#34;/&gt;&lt;link rel=&#34;schema.DCTERMS&#34; href=&#34;http://purl.org/dc/terms/&#34; hreflang=&#34;en&#34;/&gt;&lt;link rel=&#34;schema.DCTYPE&#34; href=&#34;http://purl.org/dc/dcmitype/&#34; hreflang=&#34;en&#34;/&gt;&lt;link rel=&#34;schema.DCAM&#34; href=&#34;http://purl.org/dc/dcam/&#34; hreflang=&#34;en&#34;/&gt;&lt;style type=&#34;text/css&#34;&gt;&#xA;    @page {  }&#xA;    table { border-collapse:collapse; border-spacing:0; empty-cells:show }&#xA;    td, th { vertical-align:top; font-size:10pt;}&#xA;    h1, h2, h3, h4, h5, h6 { clear:both;}&#xA;    p { white-space: nowrap; }&#xA;    ol, ul { margin:0; padding:0;}&#xA;    li { list-style: none; margin:0; padding:0;}&#xA;    /* &#34;li span.odfLiEnd&#34; - IE 7 issue*/&#xA;    li span. { clear: both; line-height:0; width:0; height:0; margin:0; padding:0; }&#xA;    span.footnodeNumber { padding-right:1em; }&#xA;    span.annotation_style_by_filter { font-size:95%; font-family:Arial; background-color:#fff000;  margin:0; border:0; padding:0;  }&#xA;    span.heading_numbering { margin-right: 0.8rem; }* { margin:0;}&#xA;    .ta1 { writing-mode:horizontal-tb; direction:ltr; }&#xA;    .Default { font-family:Liberation Sans; }&#xA;    .ce1 { font-family:Liberation Sans; font-weight:bold; }&#xA;    .ce11 { font-family:Liberation Sans; background-color:#729fcf; color:#666666; font-weight:bold; }&#xA;    .ce12 { font-family:Liberation Sans; background-color:#729fcf; color:#666666; }&#xA;    .ce13 { font-family:Liberation Sans; background-color:#ffff00; color:#666666; font-weight:bold; }&#xA;    .ce14 { font-family:Liberation Sans; background-color:#ffff00; color:#666666; }&#xA;    .ce15 { font-family:Liberation Sans; background-color:#c9211e; color:#666666; font-weight:bold; }&#xA;    .ce16 { font-family:Liberation Sans; background-color:#c9211e; color:#666666; }&#xA;    .ce17 { font-family:Liberation Sans; background-color:#00a933; color:#666666; font-weight:bold; }&#xA;    .ce18 { font-family:Liberation Sans; background-color:#00a933; color:#666666; }&#xA;    .ce2 { font-family:Liberation Sans; background-color:#00a933; font-weight:bold; }&#xA;    .ce3 { font-family:Liberation Sans; background-color:#00a933; }&#xA;    .ce7 { font-family:Liberation Sans; background-color:#00a933; color:#000000; }&#xA;    .co1 { width:1.6598in; }&#xA;    .co2 { width:2.1283in; }&#xA;    .co3 { width:0.889in; }&#xA;    .ro1 { height:0.178in; }&#xA;    .T1 { font-size:10pt; font-weight:normal; text-decoration:none ! important; font-style:normal; text-shadow:none; font-family:Liberation Sans; }&#xA;    /* ODF styles with no properties representable as CSS */&#xA;     { }&#xA;    &lt;/style&gt;&lt;/head&gt;&lt;body dir=&#34;ltr&#34;&gt;&lt;table border=&#34;0&#34; cellspacing=&#34;0&#34; cellpadding=&#34;0&#34; class=&#34;ta1&#34;&gt;&lt;colgroup&gt;&lt;col width=&#34;184&#34;/&gt;&lt;col width=&#34;236&#34;/&gt;&lt;col width=&#34;99&#34;/&gt;&lt;/colgroup&gt;&lt;tr class=&#34;ro1&#34;&gt;&lt;td style=&#34;text-align:left;width:1.6598in; &#34; class=&#34;Default&#34;&gt; &lt;/td&gt;&lt;td style=&#34;text-align:left;width:2.1283in; &#34; class=&#34;Default&#34;&gt; &lt;/td&gt;&lt;td style=&#34;text-align:left;width:0.889in; &#34; class=&#34;Default&#34;&gt; &lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;ro1&#34;&gt;&lt;td style=&#34;text-align:left;width:1.6598in; &#34; class=&#34;Default&#34;&gt; &lt;/td&gt;&lt;td style=&#34;text-align:left;width:2.1283in; &#34; class=&#34;Default&#34;&gt; &lt;/td&gt;&lt;td style=&#34;text-align:left;width:0.889in; &#34; class=&#34;Default&#34;&gt; &lt;/td&gt;&lt;/tr&gt;&lt;tr class=&#34;ro1&#34;&gt;&lt;td style=&#34;text-align:left;width:1.6598in; &#34; class=&#34;ce2&#34;&gt;&lt;p&gt;Combinatorial Logic&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/content.de/docs/digital_logic_de/agenda3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/content.de/docs/digital_logic_de/agenda3/</guid>
      <description>&lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;&#xA;&lt;!DOCTYPE html PUBLIC &#34;-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN&#34;&#xA;        &#34;http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd&#34;&gt;&#xA;&lt;html xmlns=&#34;http://www.w3.org/1999/xhtml&#34;&gt;&#xA;&lt;!--This file was converted to xhtml by LibreOffice - see https://cgit.freedesktop.org/libreoffice/core/tree/filter/source/xslt for the code.--&gt;&#xA;&lt;head profile=&#34;http://dublincore.org/documents/dcmi-terms/&#34;&gt;&#xA;    &lt;meta http-equiv=&#34;Content-Type&#34; content=&#34;application/xhtml+xml; charset=utf-8&#34;/&gt;&#xA;    &lt;title xml:lang=&#34;en-US&#34;&gt;- no title specified&lt;/title&gt;&#xA;    &lt;meta name=&#34;DCTERMS.title&#34; content=&#34;&#34; xml:lang=&#34;en-US&#34;/&gt;&#xA;    &lt;meta name=&#34;DCTERMS.language&#34; content=&#34;en-US&#34; scheme=&#34;DCTERMS.RFC4646&#34;/&gt;&#xA;    &lt;meta name=&#34;DCTERMS.source&#34; content=&#34;http://xml.openoffice.org/odf2xhtml&#34;/&gt;&#xA;    &lt;meta name=&#34;DCTERMS.issued&#34; content=&#34;2022-04-15T18:22:57.383394805&#34; scheme=&#34;DCTERMS.W3CDTF&#34;/&gt;&#xA;    &lt;meta name=&#34;DCTERMS.modified&#34; content=&#34;2023-04-22T14:56:22.387538699&#34; scheme=&#34;DCTERMS.W3CDTF&#34;/&gt;&#xA;    &lt;meta name=&#34;DCTERMS.provenance&#34; content=&#34;&#34; xml:lang=&#34;en-US&#34;/&gt;&#xA;    &lt;meta name=&#34;DCTERMS.subject&#34; content=&#34;,&#34; xml:lang=&#34;en-US&#34;/&gt;&#xA;    &lt;link rel=&#34;schema.DC&#34; href=&#34;http://purl.org/dc/elements/1.1/&#34; hreflang=&#34;en&#34;/&gt;&#xA;    &lt;link rel=&#34;schema.DCTERMS&#34; href=&#34;http://purl.org/dc/terms/&#34; hreflang=&#34;en&#34;/&gt;&#xA;    &lt;link rel=&#34;schema.DCTYPE&#34; href=&#34;http://purl.org/dc/dcmitype/&#34; hreflang=&#34;en&#34;/&gt;&#xA;    &lt;link rel=&#34;schema.DCAM&#34; href=&#34;http://purl.org/dc/dcam/&#34; hreflang=&#34;en&#34;/&gt;&#xA;    &lt;style type=&#34;text/css&#34;&gt;&#xA;    @page {  }&#xA;    table { border-collapse:collapse; border-spacing:0; empty-cells:show }&#xA;    td, th { vertical-align:top; font-size:10pt;}&#xA;    h1, h2, h3, h4, h5, h6 { clear:both;}&#xA;    p { white-space: nowrap; }&#xA;    ol, ul { margin:0; padding:0;}&#xA;    li { list-style: none; margin:0; padding:0;}&#xA;    /* &#34;li span.odfLiEnd&#34; - IE 7 issue*/&#xA;    li span. { clear: both; line-height:0; width:0; height:0; margin:0; padding:0; }&#xA;    span.footnodeNumber { padding-right:1em; }&#xA;    span.annotation_style_by_filter { font-size:95%; font-family:Arial; background-color:#fff000;  margin:0; border:0; padding:0;  }&#xA;    span.heading_numbering { margin-right: 0.8rem; }* { margin:0;}&#xA;    .ta1 { writing-mode:horizontal-tb; direction:ltr; }&#xA;    .Default { font-family:Liberation Sans; }&#xA;    .ce1 { font-family:Liberation Sans; font-weight:bold; }&#xA;    .ce11 { font-family:Liberation Sans; background-color:#729fcf; color:#666666; font-weight:bold; }&#xA;    .ce12 { font-family:Liberation Sans; background-color:#729fcf; color:#666666; }&#xA;    .ce13 { font-family:Liberation Sans; background-color:#ffff00; color:#666666; font-weight:bold; }&#xA;    .ce14 { font-family:Liberation Sans; background-color:#ffff00; color:#666666; }&#xA;    .ce15 { font-family:Liberation Sans; background-color:#c9211e; color:#666666; font-weight:bold; }&#xA;    .ce16 { font-family:Liberation Sans; background-color:#c9211e; color:#666666; }&#xA;    .ce18 { font-family:Liberation Sans; background-color:#00a933; color:#666666; }&#xA;    .ce2 { font-family:Liberation Sans; background-color:#00a933; font-weight:bold; }&#xA;    .ce22 { font-family:Liberation Sans; background-color:#00a933; color:#000000; font-weight:bold; }&#xA;    .ce3 { font-family:Liberation Sans; background-color:#00a933; }&#xA;    .ce7 { font-family:Liberation Sans; background-color:#00a933; color:#000000; }&#xA;    .co1 { width:1.6598in; }&#xA;    .co2 { width:2.1283in; }&#xA;    .co3 { width:0.889in; }&#xA;    .ro1 { height:0.178in; }&#xA;    .T1 { font-size:10pt; font-weight:normal; text-decoration:none ! important; font-style:normal; text-shadow:none; font-family:Liberation Sans; }&#xA;    /* ODF styles with no properties representable as CSS */&#xA;     { }&#xA;&#xA;    &lt;/style&gt;&#xA;&lt;/head&gt;&#xA;&lt;body dir=&#34;ltr&#34;&gt;&#xA;&lt;table border=&#34;0&#34; cellspacing=&#34;0&#34; cellpadding=&#34;0&#34; class=&#34;ta1&#34;&gt;&#xA;    &lt;colgroup&gt;&#xA;        &lt;col width=&#34;184&#34;/&gt;&#xA;        &lt;col width=&#34;236&#34;/&gt;&#xA;        &lt;col width=&#34;99&#34;/&gt;&#xA;    &lt;/colgroup&gt;&#xA;    &lt;tr class=&#34;ro1&#34;&gt;&#xA;        &lt;td style=&#34;text-align:left;width:1.6598in; &#34; class=&#34;Default&#34;&gt; &lt;/td&gt;&#xA;        &lt;td style=&#34;text-align:left;width:2.1283in; &#34; class=&#34;Default&#34;&gt; &lt;/td&gt;&#xA;        &lt;td style=&#34;text-align:left;width:0.889in; &#34; class=&#34;Default&#34;&gt; &lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr class=&#34;ro1&#34;&gt;&#xA;        &lt;td style=&#34;text-align:left;width:1.6598in; &#34; class=&#34;Default&#34;&gt; &lt;/td&gt;&#xA;        &lt;td style=&#34;text-align:left;width:2.1283in; &#34; class=&#34;Default&#34;&gt; &lt;/td&gt;&#xA;        &lt;td style=&#34;text-align:left;width:0.889in; &#34; class=&#34;Default&#34;&gt; &lt;/td&gt;&#xA;    &lt;/tr&gt;&#xA;    &lt;tr class=&#34;ro1&#34;&gt;&#xA;        &lt;td style=&#34;text-align:left;width:1.6598in; &#34; class=&#34;ce2&#34;&gt;&lt;p&gt;Combinatorial Logic&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
